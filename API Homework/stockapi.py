# -*- coding: utf-8 -*-
"""StockAPI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11q3fpFiTzRJQ75_NcntIEbALd5qXqt_h
"""

import json
import pandas as pd
import json
import requests

stock=input("Enter Ticker Symbol")

print("The Stock we will research is:" + stock)

apikey = "X"

url_1 = "https://yfapi.net/v6/finance/quote"
querystring = {"symbols": stock}
headers = {'x-api-key': apikey}

response_1 = requests.get(url_1, headers=headers, params=querystring)

stock_data = {
    "Symbol": stock,
    "Company Name": None,
    "Current Price": None,
    "52-Week High": None,
    "52-Week Low": None,
    "Target Mean Price": None
}

if response_1.status_code == 200:
    stock_json_1 = response_1.json()

    if stock_json_1['quoteResponse']['result']:
        company_name = stock_json_1['quoteResponse']['result'][0]["longName"]
        current_price = stock_json_1['quoteResponse']['result'][0]["regularMarketPrice"]
        fifty_two_week_high = stock_json_1['quoteResponse']['result'][0]["fiftyTwoWeekHigh"]
        fifty_two_week_low = stock_json_1['quoteResponse']['result'][0]["fiftyTwoWeekLow"]
    else:
        print(f"Error: No data found for stock symbol '{stock}'.")
        company_name = current_price = fifty_two_week_high = fifty_two_week_low = None
else:
    print(f"Error: Unable to fetch data from {url_1} (Status code: {response_1.status_code})")
    company_name = current_price = fifty_two_week_high = fifty_two_week_low = None

url_2 = f"https://yfapi.net/v11/finance/quoteSummary/{stock}"
params_2 = {"modules": "financialData"}

response_2 = requests.get(url_2, headers=headers, params=params_2)

if response_2.status_code == 200:
    stock_json_2 = response_2.json()

    if stock_json_2['quoteSummary']['result']:
        try:
            target_mean_price = stock_json_2['quoteSummary']['result'][0]['financialData']['targetMeanPrice']['fmt']
        except KeyError:
            target_mean_price = "N/A"
    else:
        print(f"Error: No data found for financial data of stock symbol '{stock}'.")
        target_mean_price = "N/A"
else:
    print(f"Error: Unable to fetch data from {url_2} (Status code: {response_2.status_code})")
    target_mean_price = "N/A"

url_3 = f"https://yfapi.net/v1/finance/trending/US"
response_3 = requests.get(url_3, headers=headers)

if response_3.status_code == 200:
    trending_json = response_3.json()
    try:
        US_5_Trending = trending_json['finance']['result'][0]['quotes'][:5]
    except (KeyError, IndexError):
        US_5_Trending = []
else:
    print(f"Error: Unable to fetch data from {url_3} (Status code: {response_3.status_code})")
    US_5_Trending = []

if company_name and current_price is not None:
    print(f"{company_name} Price: ${current_price}, 52-Week High: ${fifty_two_week_high}, "
          f"52-Week Low: ${fifty_two_week_low}, Target Mean Price: {target_mean_price}")

if US_5_Trending:
    trending_stocks = ', '.join([stock['symbol'] for stock in US_5_Trending])
    print(f"Trending US Stocks: {trending_stocks}")
else:
    print("No trending stocks data available.")

Stock_df = pd.DataFrame([stock_data])
print(Stock_df)
for data in company_name, current_price, fifty_two_week_high, fifty_two_week_low, target_mean_price:
    print(data)
